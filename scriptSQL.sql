-- MySQL Script generated by MySQL Workbench
-- Thu Aug 30 23:18:19 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema InventarioCAM
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema InventarioCAM
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `InventarioCAM` DEFAULT CHARACTER SET utf8 ;
USE `InventarioCAM` ;

-- -----------------------------------------------------
-- Table `InventarioCAM`.`Permissao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`Permissao` (
  `idPermissao` INT NOT NULL,
  `tipo` VARCHAR(45) NULL,
  PRIMARY KEY (`idPermissao`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InventarioCAM`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`Usuario` (
  `id` INT NOT NULL,
  `usuario` VARCHAR(16) NOT NULL,
  `email` VARCHAR(255) NULL,
  `telefone` VARCHAR(20) NULL,
  `senha` VARCHAR(255) GENERATED ALWAYS AS () VIRTUAL,
  `nome` VARCHAR(200) NULL,
  `fkpermissao` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Usuario_Permissao1_idx` (`fkpermissao` ASC) VISIBLE,
  CONSTRAINT `fk_Usuario_Permissao1`
    FOREIGN KEY (`fkpermissao`)
    REFERENCES `InventarioCAM`.`Permissao` (`idPermissao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `InventarioCAM`.`Projeto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`Projeto` (
  `idProjeto` INT NOT NULL,
  `sigla` VARCHAR(35) NULL,
  `nome` VARCHAR(225) NULL,
  PRIMARY KEY (`idProjeto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InventarioCAM`.`tipoComponente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`tipoComponente` (
  `idtipoComponente` INT NOT NULL,
  `tipo` VARCHAR(45) NULL,
  PRIMARY KEY (`idtipoComponente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InventarioCAM`.`Componente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`Componente` (
  `idComponente` INT NOT NULL,
  `sigla` VARCHAR(35) NULL,
  `nome` VARCHAR(255) NULL,
  `versao` VARCHAR(10) NULL,
  `fktipo` INT NOT NULL,
  PRIMARY KEY (`idComponente`),
  INDEX `fk_Componente_tipoComponente_idx` (`fktipo` ASC) VISIBLE,
  CONSTRAINT `fk_Componente_tipoComponente`
    FOREIGN KEY (`fktipo`)
    REFERENCES `InventarioCAM`.`tipoComponente` (`idtipoComponente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InventarioCAM`.`Instituicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`Instituicao` (
  `idInstituicao` INT NOT NULL,
  `sigla` VARCHAR(35) NULL,
  `nome` VARCHAR(255) NULL,
  `telefone` VARCHAR(15) NULL,
  `website` VARCHAR(45) NULL,
  `idEstatistica` VARCHAR(45) NULL,
  `cep` VARCHAR(10) NULL,
  `logradouro` VARCHAR(100) NULL,
  `num` VARCHAR(7) NULL,
  `complemento` VARCHAR(100) NULL,
  `bairro` VARCHAR(55) NULL,
  `estado` VARCHAR(2) NULL,
  `cidade` VARCHAR(45) NULL,
  PRIMARY KEY (`idInstituicao`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InventarioCAM`.`Contato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`Contato` (
  `idContato` INT NOT NULL,
  `nome` VARCHAR(150) NULL,
  `telefone` VARCHAR(20) NULL,
  `email` VARCHAR(120) NULL,
  PRIMARY KEY (`idContato`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InventarioCAM`.`contInst`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`contInst` (
  `Instituicao_idInstituicao` INT NOT NULL,
  `Contato_idContato` INT NOT NULL,
  PRIMARY KEY (`Instituicao_idInstituicao`, `Contato_idContato`),
  INDEX `fk_Instituicao_has_Contato_Contato1_idx` (`Contato_idContato` ASC) VISIBLE,
  INDEX `fk_Instituicao_has_Contato_Instituicao1_idx` (`Instituicao_idInstituicao` ASC) VISIBLE,
  CONSTRAINT `fk_Instituicao_has_Contato_Instituicao1`
    FOREIGN KEY (`Instituicao_idInstituicao`)
    REFERENCES `InventarioCAM`.`Instituicao` (`idInstituicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Instituicao_has_Contato_Contato1`
    FOREIGN KEY (`Contato_idContato`)
    REFERENCES `InventarioCAM`.`Contato` (`idContato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InventarioCAM`.`Unidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`Unidade` (
  `idUnidade` INT NOT NULL,
  `sigla` VARCHAR(35) NULL,
  `nome` VARCHAR(255) NULL,
  `telefone` VARCHAR(15) NULL,
  `website` VARCHAR(45) NULL,
  `servidor` VARCHAR(20) NULL,
  `logradouro` VARCHAR(150) NULL,
  `cep` VARCHAR(10) NULL,
  `numero` VARCHAR(7) NULL,
  `complemento` VARCHAR(100) NULL,
  `bairro` VARCHAR(55) NULL,
  `estado` VARCHAR(2) NULL,
  `cidade` VARCHAR(45) NULL,
  `posicaogeo` VARCHAR(85) NULL,
  `fkinstituicao` INT NOT NULL,
  PRIMARY KEY (`idUnidade`),
  INDEX `fk_Unidade_Instituicao1_idx` (`fkinstituicao` ASC) VISIBLE,
  CONSTRAINT `fk_Unidade_Instituicao1`
    FOREIGN KEY (`fkinstituicao`)
    REFERENCES `InventarioCAM`.`Instituicao` (`idInstituicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InventarioCAM`.`contUnid`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`contUnid` (
  `Unidade_idUnidade` INT NOT NULL,
  `Contato_idContato` INT NOT NULL,
  PRIMARY KEY (`Unidade_idUnidade`, `Contato_idContato`),
  INDEX `fk_Unidade_has_Contato_Contato1_idx` (`Contato_idContato` ASC) VISIBLE,
  INDEX `fk_Unidade_has_Contato_Unidade1_idx` (`Unidade_idUnidade` ASC) VISIBLE,
  CONSTRAINT `fk_Unidade_has_Contato_Unidade1`
    FOREIGN KEY (`Unidade_idUnidade`)
    REFERENCES `InventarioCAM`.`Unidade` (`idUnidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Unidade_has_Contato_Contato1`
    FOREIGN KEY (`Contato_idContato`)
    REFERENCES `InventarioCAM`.`Contato` (`idContato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InventarioCAM`.`StatusDispositivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`StatusDispositivo` (
  `idStatusDispositivo` INT NOT NULL,
  `status` VARCHAR(45) NULL,
  PRIMARY KEY (`idStatusDispositivo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `InventarioCAM`.`Dispositivo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `InventarioCAM`.`Dispositivo` (
  `idDispositivo` INT NOT NULL,
  `ip` VARCHAR(25) NULL,
  `ipvirtual` VARCHAR(25) NULL,
  `fkstatus` INT NOT NULL,
  `fkprojeto` INT NOT NULL,
  `fkcomponente` INT NOT NULL,
  `fkunidade` INT NOT NULL,
  PRIMARY KEY (`idDispositivo`),
  INDEX `fk_Dispositivo_StatusDispositivo1_idx` (`fkstatus` ASC) VISIBLE,
  INDEX `fk_Dispositivo_Projeto1_idx` (`fkprojeto` ASC) VISIBLE,
  INDEX `fk_Dispositivo_Componente1_idx` (`fkcomponente` ASC) VISIBLE,
  INDEX `fk_Dispositivo_Unidade1_idx` (`fkunidade` ASC) VISIBLE,
  CONSTRAINT `fk_Dispositivo_StatusDispositivo1`
    FOREIGN KEY (`fkstatus`)
    REFERENCES `InventarioCAM`.`StatusDispositivo` (`idStatusDispositivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Dispositivo_Projeto1`
    FOREIGN KEY (`fkprojeto`)
    REFERENCES `InventarioCAM`.`Projeto` (`idProjeto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Dispositivo_Componente1`
    FOREIGN KEY (`fkcomponente`)
    REFERENCES `InventarioCAM`.`Componente` (`idComponente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Dispositivo_Unidade1`
    FOREIGN KEY (`fkunidade`)
    REFERENCES `InventarioCAM`.`Unidade` (`idUnidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
